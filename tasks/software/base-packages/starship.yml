### Install starship (allready installed on mac with brew)
### FYI Nerdfonts must be installed for icons to work 
      #(I have a homebrew script for mac and ./install.sh on nextcloud fonts folder)
      # all other OS's install nerd fonts through nextcloud 

# This way worked but arch had an issue with it so I switch to snaps)
#- name: Get starship install script
#  get_url:
#    url: https://starship.rs/install.sh
#    dest: /tmp/starship_install.sh
#    mode: '0755'
#  when: ansible_distribution in ["Debian", "Ubuntu", "Archlinux", "Fedora", "Pop!_OS"]

#- name: Install starship
#  shell:
#    cmd: /tmp/starship_install.sh --yes
#    executable: /bin/sh
#  become: yes
#  when: ansible_distribution in ["Debian", "Ubuntu", "Archlinux", "Fedora", "Pop!_OS"]



### Install Starship with snaps
# Don't need classic confinement
- name: Install Snaps
  community.general.snap:
    name:
      - starship
  become: true
  when: ansible_distribution in ["Debian", "Ubuntu", "Archlinux", "Fedora", "Pop!_OS"]

### Copy starship.toml dotfiles ###
- name: copy dotfile (Linux)
  become_user: rocket
  copy:
    src: files/home-base/dotfiles/custom-starship.toml
    dest: /home/rocket/.config/starship.toml
  when: ansible_distribution in ["Debian", "Ubuntu", "Archlinux", "Fedora", "Pop!_OS"]

- name: copy dotfile (mac)
  become_user: rocket
  copy:
    src: files/home-base/dotfiles/custom-starship.toml
    dest: /Users/rocket/.config/starship.toml
  when: ansible_local['custom']['device']['dev'] in ["mac"] # custom fact



### Copy zsh and bash ICONS dotfiles ###
- name: copy dotfile (Mac)
  become_user: rocket
  copy:
    src: files/home-base/dotfiles/source-starship-icons4bash
    dest: /Users/rocket/Dotfiles/source-starship-icons4bash
  when: ansible_local['custom']['device']['dev'] in ["mac"] # custom fact


- name: copy dotfile (Linux)
  become_user: rocket
  copy:
    src: files/home-base/dotfiles/source-starship-icons4bash
    dest: /home/rocket/Dotfiles/source-starship-icons4bash
  when: ansible_distribution in ["Debian", "Ubuntu", "Archlinux", "Fedora", "Pop!_OS"]

- name: copy dotfile (mac)
  become_user: rocket
  copy:
    src: files/home-base/dotfiles/source-starship-icons4zsh
    dest: /Users/rocket/Dotfiles/source-starship-icons4zsh
  when: ansible_local['custom']['device']['dev'] in ["mac"] # custom fact

- name: copy dotfile (Linux)
  become_user: rocket
  copy:
    src: files/home-base/dotfiles/source-starship-icons4zsh
    dest: /home/rocket/Dotfiles/source-starship-icons4zsh
  when: ansible_distribution in ["Debian", "Ubuntu", "Archlinux", "Fedora", "Pop!_OS"]



### Append evals and Sources###
- name: Append eval to .zshrc (Linux)
  lineinfile:
    path: /home/rocket/.zshrc
    line: "{{ item }}"
  with_items:
    - 'source /home/rocket/Dotfiles/source-starship-icons4zsh #line added with starship ansible play'
    - '###########         eval MUST BE LAST!         ##############'
    - 'eval "$(starship init zsh)"'
  when: ansible_distribution in ["Debian", "Ubuntu", "Archlinux", "Fedora", "Pop!_OS"]

- name: Append eval to .zshrc (mac)
  lineinfile:
    path: /Users/rocket/.zshrc
    line: "{{ item }}"
  with_items:
    - 'source /Users/rocket/Dotfiles/source-starship-icons4zsh #line added with starship ansible play'
    - '###########         eval MUST BE LAST!         ##############'
    - 'eval "$(starship init zsh)"'
  when: ansible_local['custom']['device']['dev'] in ["mac"] # custom fact

- name: Append eval to .bashrc (Linux)
  lineinfile:
    path: /home/rocket/.bashrc
    line: "{{ item }}"
  with_items:
    - 'source /home/rocket/Dotfiles/source-starship-icons4bash #line added with starship ansible play'    
    - '###########         eval MUST BE LAST!         ##############'
    - 'eval "$(starship init bash)"'
  when: ansible_distribution in ["Debian", "Ubuntu", "Archlinux", "Fedora", "Pop!_OS"]

- name: Append eval to .bashrc (Mac)
  lineinfile:
    path: /Users/rocket/.bashrc
    line: "{{ item }}"
  with_items:
    - 'source /Users/rocket/Dotfiles/source-starship-icons4bash #line added with starship ansible play'    
    - '###########         eval MUST BE LAST!         ##############'
    - 'eval "$(starship init bash)"'
  when: ansible_local['custom']['device']['dev'] in ["mac"] # custom fact


  #Replace Lines in Mac with Regex for icons to work

- name: Delete Lines Containing Keywords (bash)
  lineinfile:
    path: /Users/rocket/Dotfiles/source-starship-icons4bash
    regexp: MACDELETE
    state: absent  
  when: ansible_local['custom']['device']['dev'] in ["mac"] # custom fact

- name: Delete Lines Containing Keywords (zsh)
  lineinfile:
    path: /Users/rocket/Dotfiles/source-starship-icons4zsh
    regexp: MACDELETE
    state: absent  
  when: ansible_local['custom']['device']['dev'] in ["mac"] # custom fact

- name: Remove Hashtags Using Keywords (bash)
  replace:
    path: /Users/rocket/Dotfiles/source-starship-icons4bash
    # Remove comment from matching lines
    regexp: '^#(.*MACKEEP*.)'
    replace: '\1'
    #replace: '#\1' # for refrence this would add a hashtag
  when: ansible_local['custom']['device']['dev'] in ["mac"] # custom fact

- name: Remove Hashtags Using Keywords (zsh)
  replace:
    path: /Users/rocket/Dotfiles/source-starship-icons4zsh
    # Remove comment from matching lines
    regexp: '^#(.*MACKEEP*.)'
    replace: '\1'
    #replace: '#\1' # for refrence this would add a hashtag
  when: ansible_local['custom']['device']['dev'] in ["mac"] # custom fact

